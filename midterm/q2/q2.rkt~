#lang racket

(define (sixes-and-sevens lst)
  (cond
    [(empty? lst) empty]
    [(zero? (- (first lst) 6)) (cons((first lst) (sixes-and-sevens (rest lst))))]
    [(zero? (- (first lst) 7)) (cons((first lst) (sixes-and-sevens (rest lst))))]
    [else sixes-and-sevens (rest lst)]))

(module+ test
  (require rackunit)
  (check-equal? (sixes-and-sevens '(1 6 12 18 7)) '(6 12 18 7)))